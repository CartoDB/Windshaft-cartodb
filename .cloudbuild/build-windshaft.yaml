steps:

# Cancel previous job on the same branch
- name: gcr.io/cloud-builders/gcloud
  entrypoint: /bin/bash
  args:
  - '-c'
  - 'gcloud builds list --ongoing --filter="buildTriggerId=b86bce47-8cce-4367-b1d8-7ebb38b88292 AND substitutions.BRANCH_NAME=${BRANCH_NAME} AND id!=${BUILD_ID}" --format="get(ID)" > jobs_to_cancel'

- name: gcr.io/cloud-builders/gcloud
  entrypoint: /bin/bash
  args:
  - '-c'
  - 'gcloud builds cancel $(cat jobs_to_cancel | xargs) || true'

# Decrypt github key
- name: gcr.io/cloud-builders/gcloud
  args:
  - kms
  - decrypt
  - --ciphertext-file=.cloudbuild/.id_github_cartofante.enc
  - --plaintext-file=/root/.ssh/id_rsa
  - --location=global
  - --keyring=keyring-github-ci
  - --key=github-key
  volumes:
  - name: 'ssh'
    path: /root/.ssh

# Set up git with key and domain
- name: 'gcr.io/cloud-builders/git'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    chmod 600 /root/.ssh/id_rsa
    cat <<EOF >/root/.ssh/config
    Hostname github.com
    IdentityFile /root/.ssh/id_rsa
    EOF
    mv .cloudbuild/known_hosts /root/.ssh/known_hosts
  volumes:
  - name: 'ssh'
    path: /root/.ssh

# Clean working directory
- name: alpine
  args: ['sh', '-c', 'rm -rf .* | true && rm -rf *']

# Checkout repo with submodules
- name: 'gcr.io/cloud-builders/git'
  entrypoint: 'sh'
  args: ['-c', 'git clone git@github.com:CartoDB/windshaft-cartodb -b "${BRANCH_NAME}" --depth 1 --recursive .']
  volumes:
  - name: 'ssh'
    path: /root/.ssh

# Build and push image
- name: gcr.io/cloud-builders/docker
  entrypoint: /bin/bash
  args:
    - -cx
    - |
      docker pull gcr.io/cartodb-on-gcp-main-artifacts/windshaft:${_BRANCH_TAG}
      if [ ! -z "$?" ]
      then
        docker pull gcr.io/cartodb-on-gcp-main-artifacts/windshaft:latest
      fi

      echo "Building windshaft image from branch: ${_BRANCH_TAG}..."
      docker build -f private/Dockerfile --label="org.opencontainers.image.created=$$(date --rfc-3339=seconds)" --label=org.opencontainers.image.revision=${COMMIT_SHA} -t gcr.io/cartodb-on-gcp-main-artifacts/windshaft:latest -t gcr.io/cartodb-on-gcp-main-artifacts/windshaft:${_BRANCH_TAG}--${SHORT_SHA} -t gcr.io/cartodb-on-gcp-main-artifacts/windshaft:${_BRANCH_TAG} -t gcr.io/cartodb-on-gcp-main-artifacts/windshaft:${SHORT_SHA} --cache-from gcr.io/cartodb-on-gcp-main-artifacts/windshaft:${_BRANCH_TAG} --cache-from gcr.io/cartodb-on-gcp-main-artifacts/windshaft:latest .
      docker build -f private/Dockerfile.onprem --label="org.opencontainers.image.created=$$(date --rfc-3339=seconds)" --label=org.opencontainers.image.revision=${COMMIT_SHA} -t gcr.io/cartodb-on-gcp-main-artifacts/windshaft-onprem:latest -t gcr.io/cartodb-on-gcp-main-artifacts/windshaft-onprem:${_BRANCH_TAG} -t gcr.io/cartodb-on-gcp-main-artifacts/windshaft-onprem:${SHORT_SHA} -t gcr.io/cartodb-on-gcp-main-artifacts/windshaft-onprem:${_BRANCH_TAG}--${SHORT_SHA} .

      echo 'Pushing windshaft image to the registry...'
      docker push gcr.io/cartodb-on-gcp-main-artifacts/windshaft:${_BRANCH_TAG}--${SHORT_SHA}
      docker push gcr.io/cartodb-on-gcp-main-artifacts/windshaft:${_BRANCH_TAG}
      docker push gcr.io/cartodb-on-gcp-main-artifacts/windshaft:${SHORT_SHA}

      echo 'Pushing windshaft-onprem image...'
      docker push gcr.io/cartodb-on-gcp-main-artifacts/windshaft-onprem:${_BRANCH_TAG}
      docker push gcr.io/cartodb-on-gcp-main-artifacts/windshaft-onprem:${SHORT_SHA}
      docker push gcr.io/cartodb-on-gcp-main-artifacts/windshaft-onprem:${_BRANCH_TAG}--${SHORT_SHA}

      if [ 'master' == "${_BRANCH_TAG}" ]
      then
        echo 'Pushing latest tag...'
        docker push gcr.io/cartodb-on-gcp-main-artifacts/windshaft:latest
        docker push gcr.io/cartodb-on-gcp-main-artifacts/windshaft-onprem:latest
      fi

      if [ "${TAG_NAME}" ]
      then
        echo 'Pushing latest tag...'
        docker push gcr.io/cartodb-on-gcp-main-artifacts/windshaft:${TAG_NAME}
        docker push gcr.io/cartodb-on-gcp-main-artifacts/windshaft-onprem:${TAG_NAME}
      fi

timeout: 300s
substitutions:
  _BRANCH_TAG: ${BRANCH_NAME//\//-}
 
